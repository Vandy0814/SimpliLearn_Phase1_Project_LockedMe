package simplilearn.phase.one.project;

import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class WelcomScreen {
	
	LockerOperationsImpl lc = new LockerOperationsImpl();
	
	Scanner scan = new Scanner(System.in);
	
	public static void main(String[] args) throws IOException
	{
		WelcomScreen wc = new WelcomScreen();
		
		//Display information for Welcome Screen
		wc.displayInfo();
		
		wc.perform();
	}

	//Display information for Welcome Screen
	public void displayInfo()
	{
		System.out.println("*****************************************************************************");
		System.out.println("*****************************************************************************");
		System.out.println("                           LockedMe.com                                      ");
		System.out.println("*****************************************************************************");
		System.out.println("*****************************************************************************");
		System.out.println("\n\n");
		System.out.println("*****************************************************************************");
		System.out.println("*****************************************************************************");
		System.out.println("                    Developed By: VANDANA SINGH                              ");
		System.out.println("                     Company Lockers Pvt. Ltd                                ");
		System.out.println("*****************************************************************************");
		System.out.println("*****************************************************************************");
	}
	
	//Display Choices for Main Options
	public void displayMainOptions()
	{
		System.out.println("\n\n");
		System.out.println("***   Current Directory: " + Constants.path +"    ***");
		System.out.println("--------------------------------------------------");
		System.out.println("--------------------------------------------------");
		System.out.println("|       Select any one from below options:       |");
		System.out.println("|           "+Constants.mainOptions[0]+"         |");
		System.out.println("|           "+Constants.mainOptions[1]+"            |");
		System.out.println("|           "+Constants.mainOptions[2]+"              |");
		System.out.println("--------------------------------------------------");
		System.out.println("--------------------------------------------------");
		System.out.println("\n");
	}
	
	//Display Choices for Sub Options (ADD/Delete/Search)
	public void displaySubOptions()
	{
		System.out.println("\n\n");
		System.out.println("***   Current Directory: " + Constants.path +"    ***");
		System.out.println("--------------------------------------------------");
		System.out.println("--------------------------------------------------");
		System.out.println("|       Select any one from below options:       |");
		System.out.println("|           "+Constants.subOptions[0]+"                     |");
		System.out.println("|           "+Constants.subOptions[1]+"                  |");
		System.out.println("|           "+Constants.subOptions[2]+"                  |");
		System.out.println("|           "+Constants.subOptions[3]+"             |");
		System.out.println("--------------------------------------------------");
		System.out.println("--------------------------------------------------");
		System.out.println("\n");
	}
	
	//Display Exit Screen
	public void displayExit()
	{

		System.out.println("*****************************************************************************");
		System.out.println("*****************************************************************************");
		System.out.println("                    GOODBYE!! HAVE A NICE DAY!!                              ");
		System.out.println("*****************************************************************************");
		System.out.println("*****************************************************************************");
	}
	
	
	public void perform() throws IOException
	{		
		int choice = 0;
		char wantExit = 0;
		
		do
		{
			displayMainOptions();
			System.out.println("Please Enter Your Choice (1 / 2 / 3):");
			try
			{
				choice = Integer.parseInt(scan.nextLine());				
			}catch(NumberFormatException e) {
				System.out.println("Invalid Input!! \nValid Input Integers: 1 - 3\n");
				perform();
			}
			
			switch(choice) {
			case 1:
				System.out.println();
				try {
					lc.listFiles(Constants.path, "", "list");					
				}catch(NullPointerException e) {
					System.out.println(e.getMessage());
				}catch(IllegalArgumentException e) {
					System.out.println(e.getMessage());
				}catch(Exception e) {
					System.out.println(e.getMessage());
				}
				break;
			case 2:
				System.out.println();
				subOperation();
				break;
			case 3:
				System.out.println("Are you sure you want close the application? (Y/y/N/n):");
				wantExit =  scan.nextLine().toUpperCase().charAt(0);
				if(wantExit == 'Y') {
					System.out.println("\n");
					displayExit();
					System.exit(1);
				}else if(wantExit == 'N') {
					System.out.println("\n");
					perform();
				}else {
					System.out.println("\nInvalid Input \nValid Inputs :(Y/y/N/n)\n");
					perform();
				}
				break;
			default:
				System.out.println("Invalid Input!! \nValid Input Integers: 1 - 3\n");
				perform();
			}
		}while(true);
	}
	
	public void subOperation() throws IOException
	{
		String file = null;
		String fileName = null;
		int choice = 0;
		
		do {

			displaySubOptions();
			System.out.println("Please Enter YOur Choice (1 / 2 / 3 / 4):");
			
			try {
				choice = Integer.parseInt(scan.nextLine());
			} catch (NumberFormatException e) {
				System.out.println("Invalid Input \nValid Input Integers:(1-4)");
				subOperation();
			}
			
			
			switch (choice) {
			case 1: 
					System.out.println("\n==> Adding a File...");
					System.out.println("Please enter a file name (If multiple files then please use comma as separator - Ex; abc.txt,xyz.txt) : ");
					file = scan.nextLine();
					fileName = file.trim();
					String fileArr[] = fileName.toLowerCase().split(","); 
					List<String>fileList = Arrays.asList(fileArr);
					try {
						if(fileList != null || !fileList.isEmpty())
						{
							lc.addFiles(Constants.path, fileList);
						}
					}catch(NullPointerException e) {
						System.out.println(e.getMessage());
					}catch(IOException e) {
						System.out.println("Error occurred while adding file..");
						System.out.println("Please try again...");
					}catch(Exception e) {
						System.out.println("Error occurred while adding file..");
						System.out.println("Please try again...");
					}
					System.out.println("\n**********************************\n");
					break;
					
			case 2: 
					System.out.println("\n==> Deleting a File...");
					System.out.println("Please enter a file name to Delete (If multiple files then please use comma as separator - Ex; abc.txt,xyz.txt) : ");
					file = scan.nextLine();
					fileName = file.trim();
					String delFileArr[] = fileName.toLowerCase().split(","); 
					List<String>delFileList = Arrays.asList(delFileArr);
					try {
						if(delFileList != null || !delFileList.isEmpty())
						{
							lc.deleteFiles(Constants.path, delFileList);
						}
					}catch(NullPointerException e) {
						System.out.println(e.getMessage());
					}catch(Exception e) {
						System.out.println("Error occurred while Deleting File..");
						System.out.println("Please try again...");
					}
					System.out.println("\n***********************************\n");
					break;
					
			case 3: 
					System.out.println("\n==> Searching a File...");
					System.out.println("Please enter a file name to Search : ");
					file = scan.nextLine();
					fileName = file.trim();
					try {
						lc.listFiles(Constants.path, fileName, "search");	
					}catch(NullPointerException e) {
						System.out.println(e.getMessage());
					}catch(IllegalArgumentException e) {
						System.out.println(e.getMessage());
					}catch(Exception e) {
						System.out.println(e.getMessage());
					}
					System.out.println("\n***********************************\n");
					break;
			case 4: 
				perform();
				break;
					
			default:
				System.out.println("Invalid Input \nValid Input Integers:(1-4)");
				subOperation();
			}
			
		file = null;
		fileName = null;
			
		}while(true);
	}

}
